{
  "name": "Galgo",
  "tagline": "Library to calculate minimal and maximum solutions using Genetic Algorithm",
  "body": "# galgo\r\nLibrary to calculate **minimal and maximum solutions** using Genetic Algorithm.\r\n\r\nCurrent specs:\r\n- Each solution for a population generates 2 children solutions\r\n- Only best 50% of generate children survive to generate next solutions\r\n- No parents surviving\r\n\r\n## Using\r\n\r\n    var galgo = require('galgo');\r\n    galgo.fitnessFunction = myFitnessFunction;\r\n    galgo.options = myOptions;    // optionally set 1 or more options (or replace by its own)\r\n    var result = galgo.run();\r\n\r\n## Options\r\n\r\nOptions with default values, that can be changed through `galgo.options`:\r\n\r\n    options: {\r\n        chromosomeLength: 10,       // length of encoding array of bits\r\n        generationsQty: 5,          // quantity of generations to run (#iterations)\r\n        mutationProbability: 0.02,  // probability of mutation occur on next generation of a solution: [0, 1]\r\n        populationSize: 10000       // size of solutions per generation,\r\n        interval: {                 // interval of accepted solution\r\n            min: -2,\r\n            max: 2\r\n        }\r\n    }\r\n\r\n## Fitness Function\r\n\r\nOn this initial version, *galgo* expects fitness function, or **fitness function**, only with 1 or 2 variables.\r\n\r\nIt's defined by `galgo.fitnessFunction`:\r\n\r\n    function myFitnessFn(x, y) {\r\n        return x * x + 4 * y * y + 4 * y + x;\r\n    }\r\n\r\n\r\n## TODO\r\n\r\n- [#1](https://github.com/andretf/galgo/issues/1): Allow **n** variables in fitness function\r\n- [#2](https://github.com/andretf/galgo/issues/2): Choose to **min** or **max** the fitness function\r\n- [#3](https://github.com/andretf/galgo/issues/3): Allow Elitism\r\n- [#4](https://github.com/andretf/galgo/issues/4): Surviving parents with max-age option\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}